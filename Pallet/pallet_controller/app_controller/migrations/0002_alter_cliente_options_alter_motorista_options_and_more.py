# Generated by Django 5.2.1 on 2025-08-15 16:12

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_controller', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='cliente',
            options={'ordering': ['nome'], 'verbose_name': 'Cliente', 'verbose_name_plural': 'Clientes'},
        ),
        migrations.AlterModelOptions(
            name='motorista',
            options={'ordering': ['nome'], 'verbose_name': 'Motorista', 'verbose_name_plural': 'Motoristas'},
        ),
        migrations.AlterModelOptions(
            name='movimentacao',
            options={'ordering': ['-data_hora'], 'verbose_name': 'Movimentação', 'verbose_name_plural': 'Movimentações'},
        ),
        migrations.AlterModelOptions(
            name='transportadora',
            options={'ordering': ['nome'], 'verbose_name': 'Transportadora', 'verbose_name_plural': 'Transportadoras'},
        ),
        migrations.AlterModelOptions(
            name='valepallet',
            options={'ordering': ['-data_emissao'], 'verbose_name': 'Vale Pallet', 'verbose_name_plural': 'Vales Pallets'},
        ),
        migrations.RemoveField(
            model_name='valepallet',
            name='codigo_barras',
        ),
        migrations.RemoveField(
            model_name='valepallet',
            name='saldo_chepp',
        ),
        migrations.RemoveField(
            model_name='valepallet',
            name='saldo_pbr',
        ),
        migrations.AddField(
            model_name='movimentacao',
            name='data_validade',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='valepallet',
            name='data_retorno',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='valepallet',
            name='data_saida',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='cnpj',
            field=models.CharField(help_text='Formato: 00.000.000/0000-00', max_length=18, unique=True, validators=[django.core.validators.MinLengthValidator(14)], verbose_name='CNPJ'),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail'),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='nome',
            field=models.CharField(help_text='Razão Social ou Nome Completo', max_length=255, verbose_name='Nome Completo'),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='telefone',
            field=models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Formato: (XX) XXXX-XXXX ou (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')], verbose_name='Telefone'),
        ),
        migrations.AlterField(
            model_name='motorista',
            name='cpf',
            field=models.CharField(help_text='Formato: 000.000.000-00', max_length=14, unique=True, validators=[django.core.validators.MinLengthValidator(11)], verbose_name='CPF'),
        ),
        migrations.AlterField(
            model_name='motorista',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail'),
        ),
        migrations.AlterField(
            model_name='motorista',
            name='nome',
            field=models.CharField(max_length=255, verbose_name='Nome Completo'),
        ),
        migrations.AlterField(
            model_name='motorista',
            name='telefone',
            field=models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Formato: (XX) XXXX-XXXX ou (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')], verbose_name='Telefone'),
        ),
        migrations.AlterField(
            model_name='movimentacao',
            name='tipo',
            field=models.CharField(choices=[('EMITIDO', 'Emitido'), ('SAIDA', 'Saida'), ('RETORNO', 'Retorno'), ('CANCELADO', 'Cancelado'), ('SCAN', 'Scan QR Code')], max_length=10),
        ),
        migrations.AlterField(
            model_name='transportadora',
            name='cnpj',
            field=models.CharField(help_text='Formato: 00.000.000/0000-00', max_length=18, unique=True, validators=[django.core.validators.MinLengthValidator(14)], verbose_name='CNPJ'),
        ),
        migrations.AlterField(
            model_name='transportadora',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail'),
        ),
        migrations.AlterField(
            model_name='transportadora',
            name='nome',
            field=models.CharField(max_length=255, verbose_name='Nome da Transportadora'),
        ),
        migrations.AlterField(
            model_name='transportadora',
            name='telefone',
            field=models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Formato: (XX) XXXX-XXXX ou (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')], verbose_name='Telefone'),
        ),
        migrations.AlterField(
            model_name='valepallet',
            name='estado',
            field=models.CharField(choices=[('EMITIDO', 'Emitido'), ('SAIDA', 'Saida'), ('RETORNO', 'Retorno'), ('CANCELADO', 'Cancelado')], default='EMITIDO', max_length=10),
        ),
        migrations.AlterModelTable(
            name='movimentacao',
            table=None,
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('Administrador', 'Administradores'), ('Cadastro', 'Cadastrados')], default='Cadastro', max_length=15)),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Formato: (XX) XXXX-XXXX ou (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='movimentacao',
            name='responsavel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='valepallet',
            name='usuario_retorno',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vales_retorno', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Retorno'),
        ),
        migrations.AddField(
            model_name='valepallet',
            name='usuario_saida',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vales_saida', to=settings.AUTH_USER_MODEL, verbose_name='Usuário da saída'),
        ),
        migrations.CreateModel(
            name='PessoaJuridica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(max_length=255)),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, null=True)),
                ('cnpj', models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(message='CNPJ inválido. Formato: 00.000.000/0000-00', regex='^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$')])),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20, null=True)),
                ('inscricao_municipal', models.CharField(blank=True, max_length=20, null=True)),
                ('iest', models.CharField(blank=True, max_length=20, null=True)),
                ('telefone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('site', models.URLField(blank=True, null=True)),
                ('cep', models.CharField(max_length=9)),
                ('logradouro', models.CharField(max_length=255)),
                ('numero', models.CharField(max_length=10)),
                ('bairro', models.CharField(max_length=100)),
                ('complemento', models.CharField(blank=True, max_length=100, null=True)),
                ('estado', models.CharField(max_length=2)),
                ('cidade', models.CharField(max_length=100)),
                ('situacao_cadastral', models.CharField(choices=[('Ativo', 'Ativo'), ('Inativo', 'Inativo'), ('Suspenso', 'Suspenso')], default='Ativo', max_length=10)),
                ('tipo_empresa', models.CharField(blank=True, choices=[('cadastrado', 'cadastrados')], max_length=10, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pessoa_juridica', to=settings.AUTH_USER_MODEL, verbose_name='Usuário responsável')),
            ],
        ),
        migrations.AddField(
            model_name='cliente',
            name='criado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app_controller.pessoajuridica', verbose_name='Criado por'),
        ),
        migrations.AddField(
            model_name='motorista',
            name='criado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app_controller.pessoajuridica', verbose_name='Criado por'),
        ),
        migrations.AddField(
            model_name='transportadora',
            name='criado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app_controller.pessoajuridica', verbose_name='Criado por'),
        ),
        migrations.AddField(
            model_name='valepallet',
            name='criado_por',
            field=models.ForeignKey(blank=True, db_column='criado_por', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vales_criados', to='app_controller.pessoajuridica', verbose_name='Criado por'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['nome'], name='app_control_nome_0e455e_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['cnpj'], name='app_control_cnpj_ed8a4f_idx'),
        ),
        migrations.AddIndex(
            model_name='motorista',
            index=models.Index(fields=['nome'], name='app_control_nome_eb8313_idx'),
        ),
        migrations.AddIndex(
            model_name='motorista',
            index=models.Index(fields=['cpf'], name='app_control_cpf_da29e4_idx'),
        ),
        migrations.AddIndex(
            model_name='transportadora',
            index=models.Index(fields=['nome'], name='app_control_nome_14b15f_idx'),
        ),
        migrations.AddIndex(
            model_name='transportadora',
            index=models.Index(fields=['cnpj'], name='app_control_cnpj_41431c_idx'),
        ),
    ]
